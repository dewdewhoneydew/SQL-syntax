#Simple filter to find exactly "M" values

SELECT first_name,last_name,gender
FROM patients
where gender ='M';

#to find values which begain with a C

SELECT first_name
FROM patients
WHERE first_name LIKE 'C%';

#to find values between a range

SELECT first_name, last_name 
FROM patients 
WHERE weight BETWEEN 100 AND 120;

#update values according to whether they are NULL

UPDATE patients
SET allergies = 'NKA'
WHERE allergies IS NULL;

#concat columns together

Select concat(first_name, ' ' , last_name) as full_name
From patients;

#joining tables based on common column values

SELECT p.first_name, p.last_name, pn.province_name
FROM patients p
JOIN province_names pn ON p.province_id = pn.province_id;


#Count how many values/people belong to a value

SELECT COUNT(*) AS num_patients
FROM patients
WHERE YEAR(birth_date) = 2010;

#selecting largest value of a column,The reason why you cannot use WHERE MAX(height) is because MAX(height) is an aggregate function that returns the maximum value of the "height" column across all rows in the table.

When you use an aggregate function in the WHERE clause, the query engine doesn't know how to compare the value returned by the aggregate function with the values in the "height" column for each row. The WHERE clause is used to filter rows based on a specific condition, and it expects a single value or expression that can be evaluated as true or false for each row.

SELECT first_name, last_name, height
FROM patients
WHERE height = (SELECT MAX(height) FROM patients);


#Selecting rows which have specific values

SELECT *
FROM patients
WHERE patient_id IN (1, 45, 534, 879, 1000);

#count all values

SELECT COUNT(*) AS num_admissions
FROM admissions;

#find values where 2 column share the same value

SELECT *
FROM admissions
WHERE admission_date = discharge_date;


#find specific ID and number of times ID appeared

SELECT patient_id, count(*) as number_of_admissions
FROM admissions
WHERE patient_id = 579

#find unique values using DISTINCT

SELECT distinct city
FROM patients
WHERE province_id = 'NS';

#filtering based on 2 conditions that are numerical

select first_name,last_name,birth_date
from patients
Where height > 160 and weight > 70

#filtering based on 2 conditions that are text

select first_name,last_name,allergies
from patients
Where city = 'Hamilton' and allergies is not null;

#finding unique values that start with a certain character

SELECT DISTINCT city
FROM patients
# substr(city, 1,1) means u take a string from a string. in this context it means to take the string from city column and try to get a substring 
# the 2 arguments 1,1 means the starting position and the amount of characters to extract so in this statement we start from position 1 and take only 1 character
# then we check if there is a,e,i,o,u
WHERE LOWER(SUBSTR(city, 1, 1)) IN ('a', 'e', 'i', 'o', 'u')
ORDER BY city ASC;

#alternative solution
select distinct city
from patients
where
  city like 'a%'
  or city like 'e%'
  or city like 'i%'
  or city like 'o%'
  or city like 'u%'
order by city

#convert birthdates to birth year

select distinct year(birth_date) as birth_year
from patients
order by birth_year asc;

#count a column with duplicates and display only unique values

SELECT first_name
FROM patients
GROUP BY first_name
HAVING COUNT(*) = 1;

#find values which are a certain length and start with and end with a certain value

SELECT patient_id, first_name
FROM patients
WHERE LENGTH(first_name) >= 6
AND LOWER(SUBSTR(first_name, 1, 1)) = 's'
AND LOWER(SUBSTR(first_name, -1, 1)) = 's';

#alternative solution
SELECT
  patient_id,
  first_name
FROM patients
WHERE first_name LIKE 's____%s';

#join table and filter
select p.patient_id,p.first_name,p.last_name
from patients p
join admissions a on p.patient_id = a.patient_id
where diagnosis = 'Dementia'

#order by length of value then alphabetically

SELECT first_name
FROM patients
ORDER BY LENGTH(first_name), first_name;

#getting count of different values in a column and summing them up
SELECT
  SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS num_male_patients,
  SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS num_female_patients
FROM patients;

SELECT 
  (SELECT count(*) FROM patients WHERE gender='M') AS male_count, 
  (SELECT count(*) FROM patients WHERE gender='F') AS female_count;

SELECT 
  SUM(Gender = 'M') as male_count, 
  SUM(Gender = 'F') AS female_count
FROM patients

#filtering in a column to find if either one values x or y appears in a column

select first_name,last_name,allergies
from patients
where allergies = 'Penicillin' or allergies = 'Morphine'
order by allergies asc, first_name,last_name;


SELECT
  first_name,
  last_name,
  allergies
FROM patients
WHERE
  allergies IN ('Penicillin', 'Morphine')
ORDER BY
  allergies,
  first_name,
  last_name;



#finding value appears more than once 
SELECT
  patient_id,
  diagnosis
FROM admissions
GROUP BY
  patient_id,
  diagnosis
HAVING COUNT(*) > 1;

SELECT patient_id, diagnosis
FROM admissions
WHERE diagnosis IN (
  SELECT diagnosis
  FROM admissions
  GROUP BY diagnosis
  HAVING COUNT(DISTINCT patient_id) > 1
)
GROUP BY patient_id, diagnosis
HAVING COUNT(*) > 1;

#find total value counts based on column value - how many patients in each city

select city, count(*) as total_patients
from patients
group by city
order by total_patients desc,city asc;


#introducing a new column and naming it according to table such as patients for patient table and doctor for doctor table

SELECT first_name, last_name, 'Patient' as role FROM patients
    union all
select first_name, last_name, 'Doctor' from doctors;

#alternative solution

SELECT first_name, last_name, 
       CASE 
         WHEN patient_id IS NOT NULL THEN 'Patient' 
         WHEN doctor_id IS NOT NULL THEN 'Doctor' 
       END AS role
FROM (
  SELECT first_name, last_name, patient_id, NULL AS doctor_id 
  FROM patients 
  UNION ALL 
  SELECT first_name, last_name, NULL AS patient_id, doctor_id 
  FROM doctors
) AS people
ORDER BY role ASC, last_name ASC, first_name ASC;


#counting how many times a value appears and excluding null values and grouping by and ordering by

SELECT allergies, COUNT(*) AS num_patients
FROM patients
WHERE allergies IS NOT NULL
GROUP BY allergies
ORDER BY num_patients DESC;


#select values between a time range

SELECT first_name, last_name, birth_date
FROM patients
WHERE birth_date BETWEEN '1970-01-01' AND '1979-12-31'
ORDER BY birth_date ASC;

#concating and uppercasing columns, apparently || ',' || is the concatation symbol in SQL

SELECT
  CONCAT(UPPER(last_name), ',', LOWER(first_name)) AS new_name_format
FROM patients
ORDER BY first_name DESC;

SELECT
  UPPER(last_name) || ',' || LOWER(first_name) AS new_name_format
FROM patients
ORDER BY first_name DESC;

#group by and HAVING

SELECT province_id, SUM(height) AS total_height
FROM patients
GROUP BY province_id
HAVING SUM(height) >= 7000;


#max and least value of a certain value

SELECT MAX(weight) - MIN(weight) AS weight_difference
FROM patients
WHERE last_name = 'Maroni';


#count number of occurences in each day

SELECT DAY(admission_date) AS day_of_month, COUNT(*) AS num_admissions
FROM admissions
GROUP BY day_of_month
ORDER BY num_admissions DESC;

#find latest record of a certain patient id or value

SELECT *
FROM admissions
WHERE patient_id = 542
ORDER BY admission_date DESC
LIMIT 1;

# many conditions filter

SELECT patient_id, attending_doctor_id, diagnosis
FROM admissions
WHERE (patient_id % 2 = 1 AND attending_doctor_id IN (1, 5, 19))
   OR (attending_doctor_id LIKE '%2%' AND LENGTH(patient_id) = 3);


SELECT doctors.first_name, doctors.last_name, COUNT(*) AS num_admissions
FROM admissions
INNER JOIN doctors ON admissions.attending_doctor_id = doctors.doctor_id
GROUP BY doctors.doctor_id
ORDER BY num_admissions DESC;

#find each value 1st occurence and last occurence

SELECT
  doctors.doctor_id,
  CONCAT(doctors.first_name, ' ', doctors.last_name) AS full_name,
  MIN(admissions.admission_date) AS first_admission_date,
  MAX(admissions.admission_date) AS last_admission_date
FROM
  admissions
  JOIN doctors ON admissions.attending_doctor_id = doctors.doctor_id
GROUP BY doctors.doctor_id
ORDER BY full_name;

#i dont even know what to name this

SELECT
  
  province_name,
  COUNT(*) AS num_patients
FROM
  patients
  JOIN province_names ON patients.province_id = province_names.province_id
GROUP BY patients.province_id, province_name
ORDER BY num_patients DESC;


#why are there so many stupid questions

SELECT
  CONCAT(patients.first_name, ' ', patients.last_name) AS patient_name,
  admissions.diagnosis AS admission_diagnosis,
  CONCAT(doctors.first_name, ' ', doctors.last_name) AS doctor_name
FROM
  admissions
  JOIN patients ON admissions.patient_id = patients.patient_id
  JOIN doctors ON admissions.attending_doctor_id = doctors.doctor_id;

#find number of duplicates based on 2 columns - first name and last name
SELECT 
  first_name, 
  last_name, 
  COUNT(*) AS num_duplicates
FROM 
  patients
GROUP BY 
  first_name, 
  last_name
HAVING 
  COUNT(*) > 1;


#Display patient's full name,
height in the units feet rounded to 1 decimal,
weight in the unit pounds rounded to 0 decimals,
birth_date,
gender non abbreviated.

Convert CM to feet by dividing by 30.48.
Convert KG to pounds by multiplying by 2.205.



#conversion of metric to imperial and changing values in column

SELECT
  CONCAT(first_name, ' ', last_name) AS full_name,
  ROUND(height/30.48, 1) AS height_feet,
  ROUND(weight*2.205, 0) AS weight_lbs,
  birth_date,
  CASE gender
    WHEN 'M' THEN 'Male'
    WHEN 'F' THEN 'Female'
    ELSE 'Unknown'
  END AS gender
FROM
  patients;


#binning values and find amount of values in them

SELECT
  FLOOR(weight/10)*10 AS weight_group,
  COUNT(*) AS num_patients
FROM
  patients
GROUP BY
  weight_group
ORDER BY
  weight_group DESC;

#creating a new column based on other column values and conditions

SELECT
  patient_id,
  weight,
  height,
  CASE
    WHEN weight/POWER(height/100.0, 2) >= 30 THEN 1
    ELSE 0
  END AS isObese
FROM
  patients;

#more column creating and summing based on that

SELECT
  CASE
    WHEN patient_id % 2 = 0 THEN 'Yes'
    ELSE 'No'
  END AS has_insurance,

  SUM(CASE WHEN patient_id % 2 = 0 THEN 10 ELSE 50 END) AS admission_total
FROM
  admissions
GROUP BY
  has_insurance;


SELECT
  p.province_name
FROM
  patients AS pt
  JOIN province_names AS p ON pt.province_id = p.province_id
GROUP BY
  pt.province_id
HAVING
  SUM(CASE WHEN pt.gender = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN pt.gender = 'F' THEN 1 ELSE 0 END);

#many bloody filtering conditions

SELECT *
FROM patients
WHERE
  first_name LIKE '__%r%'
  AND gender = 'F'
  AND (
    MONTH(birth_date) = 2
    OR MONTH(birth_date) = 5
    OR MONTH(birth_date) = 12
  )
  AND weight BETWEEN 60 AND 80
  AND patient_id % 2 = 1
  AND city = 'Kingston';


#finding percentage of values occurences in table

SELECT ROUND(COUNT(CASE WHEN gender = 'M' THEN 1 END) * 100.0 / COUNT(*), 2) || '%' AS percentage_male
FROM patients;

#count the difference from the previous day

SELECT 
  admission_date,
  COUNT(*) AS admission_day,
  COUNT(*) - LAG(COUNT(*)) OVER (ORDER BY admission_date) AS admission_count_change
FROM admissions
GROUP BY admission_date
ORDER BY admission_date;


#sort a table such that a certain value which in this case ontario always comes out on top

SELECT province_name
FROM province_names
ORDER BY 
  CASE WHEN province_name = 'Ontario' THEN 1 ELSE 2 END, 
  province_name ASC;

































































